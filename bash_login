PS1="\[[\e[32;1m\]\w\[\e[35;1m\]\[\e[0m\]] $ "

# Beef up the history
HISTFILESIZE=1000000000
HISTSIZE=1000000

# Use vi mode for readline
# Default is to be in insert mode, hit escape to go to command mode and then
# you can use movement characters from vi: j, h, k, l, b, w, B, W, 0, $, etc.
set -o vi

alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'

alias ev="gvim -p $@"

alias ack='ack-grep'
alias oack='ack -l $@ | xargs gvim -p'

# Git aliases
alias ga='git add'
alias gp='git push'
alias gl='git log'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gm='git commit -m'
alias gma='git commit -am'
alias gb='git branch'
alias gc='git checkout'
alias gra='git remote add'
alias grr='git remote rm'
alias gpu='git pull'
alias gcl='git clone'
alias gcount='git shortlog -sn'

alias gen_tags='ctags -R -o mytags .'
alias rm='rm -i'

alias ipy='ipython'
alias pyclean='find . -name "*.pyc" -exec rm -r {} \;'

# Fun git shortcuts/stats snatched from various places online
gitimpact()
{
    res=`/usr/bin/git log --numstat --pretty="%H" --author=llee "$@" | awk 'NF==3 {plus+=$1; minus+=$2} END {printf("+%d, -%d\n", plus, minus)}'`
    added=`echo $res | cut -d, -f1 | cut -d+ -f2`
    removed=`echo $res | cut -d, -f2 | cut -d- -f2`
    net=`expr $added - $removed`
    echo "Net: $net (Added: $added Removed: $removed)"
}

alias gi=gitimpact

# Short cut to get pretty view of what commits in current branch are NOT yet
# in remote svn repo, aka what will be pushed with a git svn dcommit cmd
gitsvnpushed()
{
    # Stash anything that we currently have outstanding
    git stash -q
    commits=`git svn dcommit --dry-run | wc -l`

    # Output has one line of header information
    pushed_commits=`expr $commits - 1`

    echo "$pushed_commits commits to be pushed"

    git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -n$pushed_commits "$@"
    gitsvndiffstats

    # Get local changes back
    git stash pop -q
}

alias gsd=gitsvnpushed

# Shortcut to get summary of what will be pushed to svn on next dcommit
gitsvndiffstats()
{
    commits=`git svn dcommit --dry-run | wc -l`

    # Output has one line of header information
    pushed_commits=`expr $commits - 1`

    res=`/usr/bin/git log -n$pushed_commits --numstat --pretty="%H" "$@" | awk 'NF==3 {plus+=$1; minus+=$2} END {printf("+%d, -%d\n", plus, minus)}'`
    added=`echo $res | cut -d, -f1 | cut -d+ -f2`
    removed=`echo $res | cut -d, -f2 | cut -d- -f2`
    net=`expr $added - $removed`

    echo "Net: $net (Added: $added Removed: $removed) -- $pushed_commits commits"
}

alias gss=gitsvndiffstats

# Completely remove a file from all history in a git repo
whack_file() {
    file = $1

    git filter-branch --index-filter 'git rm --cached --ignore-unmatch $file' --prune-empty -- --all
    git push origin master --force
    rm -rf .git/refs/original/
    git reflog expire --expire=now --all
    git gc --prune=now
    git gc --aggressive --prune=now
}

alias gwhackfile=whack_file

# Spell check given files in directory recursively
 
spellcheck() {
    find . -iname "$1" -exec aspell -c {} \;
}

# Avoid gvim 7.3 error in ubuntu
# https://bugs.launchpad.net/ubuntu/+source/vim/+bug/771810
myvim()
{
    /usr/bin/gvim -f "$@" 2> /dev/null & true;
}

# Spell check given files in directory recursively

spellcheck() {
    find . -iname "$1" -exec aspell -c {} \;
}

# Can't use gvim as name of above wrapper
alias gvim=myvim

# virtualenv
VIRTUALENV_DIR="/home/lukelee/.virtualenvs"
export VIRTUALENV_DIR
export WORKON_HOME=$VIRTUAL_ENV_DIR
source /usr/local/bin/virtualenvwrapper.sh 

export PATH

HDF5_DIR=/usr/local/hdf5/
export HDF5_DIR

LD_LIBRARY_PATH=/usr/local/hdf5/lib/
export LD_LIBRARY_PATH

# Add color diffs
svndiff()
{
    svn diff "${@}" | colordiff
}

JAVA_HOME=~/Downloads/jdk1.7.0_01/
export JAVA_HOME
