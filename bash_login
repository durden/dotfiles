BASEDIR="/Users/lukelee/dotfiles"

#export GOROOT="/usr/local/go/"

# Aliases
source $BASEDIR/aliases.sh

# Setup PATH
source $BASEDIR/path.sh

# Setup Python virtualenv
source $BASEDIR/virtualenv_path.sh

PS1='\[[\e[35m\]\u@\[\e[33m\]\h:\[\e[32m\]\w\[\e[35m\]\[\e[0m\]] $ '

# Set tab title to path relative to home dir
# http://superuser.com/questions/419775/with-bash-iterm2-how-to-name-tabs
export PROMPT_COMMAND='echo -ne "\033]0;${PWD/#$HOME/~}\007"'

# Beef up the history
HISTFILESIZE=1000000000
HISTSIZE=1000000

# Use vi mode for readline
# Default is to be in insert mode, hit escape to go to command mode and then
# you can use movement characters from vi: j, h, k, l, b, w, B, W, 0, $, etc.
set -o vi

# Spell check given files in directory recursively
spellcheck() {
    find . -iname "$1" -exec aspell -c {} \;
}

# List largest files/directories recursively in cwd
largest_stuff() {
    du -k | sort -nr | awk '
        function human(x) {
            s="kMGTEPYZ";
            while (x>=1000 && length(s)>1)
                {x/=1024; s=substr(s,2)}
            return int(x+0.5) substr(s,1,1)
        }
        {gsub(/^[0-9]+/, human($1)); print}' | head
}

# List files with most lines (including blank lines)
max_lines_with_blanks() {
    # http://stackoverflow.com/questions/8488301/bash-find-file-with-max-lines-count
    find . -name "*.py" -type f | xargs wc -l|sort -rn|grep -v ' total$'
}

max_lines_without_blanks() {
    # http://stackoverflow.com/questions/8488301/bash-find-file-with-max-lines-count
    find . -type f -name "*.py" -exec grep -H -c '[^[:space:]]' {} \; | sort -nr -t":" -k2
}

if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi

linecount_git() {
    # http://stackoverflow.com/questions/4822471/count-number-of-lines-in-a-git-repository
    git ls-files | xargs wc -l
}


slog() {
    # Simulate git log -p with git svn log, show commit msg alongside the
    # # diff
    git log -p `git svn find-rev r"$1"`
}


if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
#
# Setup fuzzy file search
source ~/.fzf.bash
